1502. Can Make Arithmetic Progression From Sequence

easy tag
company - google

1. approach 1
// time complexity - O(nlogn) space complexity - O(1)
class Solution {
public:
    bool canMakeArithmeticProgression(vector<int>& arr) {

//      sorting the given array
        sort(begin(arr),end(arr));

//    taking hold of no of elements in the array
        int n = arr.size();

//      calculating the common difference btw the first two elements
        int d = arr[1]-arr[0];
        
//         now checking whether the common difference between n and n-1 element is same as the common difference  btw the first 2 elements
        for(int i=2;i<n;i++){
            if(arr[i]-arr[i-1] != d)
                return false;
        }
        
        return true;
        
    }
};

2. approach 2
// time complexity - 0(n) space complexity - 0(n) 
 
class Solution {
public:
    bool canMakeArithmeticProgression(vector<int>& arr) {
        int n = arr.size();
        
        unordered_set<int> st(begin(arr), end(arr));
        
        int min_el = *min_element(begin(arr), end(arr)); //a0
        int max_el = *max_element(begin(arr), end(arr)); //a0+(n-1)*d
        
        if((max_el - min_el)%(n-1))
            return false;
        
        int d = (max_el - min_el)/(n-1);
        
        int i = 0; 
        //a0 , a0+d , a0 + 2d
        
        while(i < n) {
            int num = min_el + i*d;
            if(st.find(num) == st.end())
                return false;
            
            i++;
        }
        
        return true;
    }
};


