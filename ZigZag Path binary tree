
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int longest_zigzag_path_length=0;
    void solve(TreeNode* node,bool goLeft,int steps){
        if(node == nullptr){
            return;
        }
        longest_zigzag_path_length=max(longest_zigzag_path_length,steps);
        
        if(goLeft){
            solve(node->left,false,steps+1);
              solve(node->right,true,1);
            
        } else {
//             right e jete bolechi aar jacche o right e tai step+1 korchi
              solve(node->right,true,steps+1);
            
//  right e jete bolechi aar jacche o left e tai new count korchi             
              solve(node->left,false,1);
            
        }
        
        
        
        
    }
        
        
        
        
    int longestZigZag(TreeNode* root) {
//       right dike jete bolchi
        solve(root,false,0); 
       // left dike jete bolchi 
        solve(root,true,0);
        
        return longest_zigzag_path_length;
        
        
    }
};
